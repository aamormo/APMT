<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"	
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.0.xsd">

	<!-- Scans the impl package for module @Components to install and configure -->
    <context:component-scan base-package="com.klei2.framework.service,com.klei2.framework.service.extensions,com.klei2.framework.service.custom"/>

	<context:annotation-config/>

	<!-- Configures the Hibernate Object Relational Mapper (ORM) for applications -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="mappingLocations">
			<list>
				<value>classpath:com/klei2/framework/data/hibernate/Client.hbm.xml</value>
			</list>
		</property>
		<property name="dataSource" ref="dataSource" />
	    <!--property name="hibernateProperties">
	      <value>
            hibernate.current_session_context_class=thread
	      </value>
	    </property-->
	</bean>

	<!-- Drives transactions in a local Hibernate environment -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Enables declarative transaction management with @Transactional annotations  -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>